{"ast":null,"code":"var _jsxFileName = \"/home/chhavisharma/Desktop/React/firstapp/src/try.js\";\nimport React, { Component } from 'react';\nexport class Ftry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchTodo = () => {\n      // fetch('https://jsonplaceholder.typicode.com/posts?userId=2')\n      // .then(response=>response.json())\n      // .then(parsedJson=>console.log(parsedJson))\n      // .catch(error=>console.log(\"error\",error))\n      let promise = new Promise(function (resolve, reject) {\n        setTimeout(() => reject(new Error(\"Whoops!\")), 4000);\n      });\n      promise.then(result => alert(result), error => {\n        console.log(\"Time Out\", error);\n        this.setState({\n          isLoaded: false\n        });\n      } //    alert(\"Error\")\n      );\n    };\n\n    this.state = {\n      isLoaded: false,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Component Did  Mount\");\n    this.fetchTodo();\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      console.log(\"not loaded\");\n    } else {\n      console.log(\"loaded\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"The content is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.isLoaded ? 'Loaded' : 'Not Loaded'));\n  }\n\n}\nexport default Ftry;","map":{"version":3,"sources":["/home/chhavisharma/Desktop/React/firstapp/src/try.js"],"names":["React","Component","Ftry","constructor","props","fetchTodo","promise","Promise","resolve","reject","setTimeout","Error","then","result","alert","error","console","log","setState","isLoaded","state","message","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,IAAN,SAAoBD,SAApB,CAA8B;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,SA/BmB,GA+BT,MAAI;AACV;AACA;AACA;AACA;AAED,UAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;AAE9CC,QAAAA,UAAU,CAAC,MAAID,MAAM,CAAC,IAAIE,KAAJ,CAAU,SAAV,CAAD,CAAX,EAAkC,IAAlC,CAAV;AACH,OAHa,CAAd;AAKAL,MAAAA,OAAO,CAACM,IAAR,CACIC,MAAM,IAAEC,KAAK,CAACD,MAAD,CADjB,EAEIE,KAAK,IAAE;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,KAAvB;AACI,aAAKG,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAC;AADC,SAAd;AAEG,OANf,CAOC;AAPD;AAaN,KAvDsB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAC,KADA;AAETE,MAAAA,OAAO,EAAC;AAFC,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAKZ,SAAL;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKH,KAAL,CAAWD,QAAd,EAAuB;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACC,KAFL,MAII;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKG,KAAL,CAAWD,QAAX,GAAsB,QAAtB,GAAiC,YAArC,CADf,CADJ;AAKH;;AA7BgC;AA2DrC,eAAejB,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class Ftry  extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            isLoaded:false,\n            message:\"\"\n             \n        }\n    }\n    \n    componentDidMount(){\n        console.log(\"Component Did  Mount\");\n        this.fetchTodo();\n    }\n\n    render() {\n        if(this.state.isLoaded){\n            console.log(\"not loaded\")\n            }\n\n        else{\n            console.log(\"loaded\")\n        }\n        return (\n            <div>\n            The content is <b>{this.state.isLoaded ? 'Loaded' : 'Not Loaded'}</b> \n          </div>\n        )\n    }\n\n    \n    fetchTodo=()=>{\n        // fetch('https://jsonplaceholder.typicode.com/posts?userId=2')\n        // .then(response=>response.json())\n        // .then(parsedJson=>console.log(parsedJson))\n        // .catch(error=>console.log(\"error\",error))\n\n       let promise = new Promise(function(resolve,reject){\n           \n           setTimeout(()=>reject(new Error(\"Whoops!\")),4000);\n       });\n\n       promise.then(\n           result=>alert(result),\n           error=>{\n               console.log(\"Time Out\",error);\n                   this.setState({\n                       isLoaded:false\n                   })}\n        //    alert(\"Error\")\n            \n           \n       );\n\n    \n}\n}\n\nexport default Ftry;\n\n"]},"metadata":{},"sourceType":"module"}