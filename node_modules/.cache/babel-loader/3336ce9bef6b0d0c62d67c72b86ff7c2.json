{"ast":null,"code":"var _jsxFileName = \"/home/chhavisharma/Desktop/React/firstapp/src/clock.js\";\nimport React, { Component } from \"react\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localCounter: 0\n    };\n    this.updateLocalCounter = this.updateLocalCounter.bind(this);\n  }\n\n  updateLocalCounter() {\n    let localCounter = this.state.localCounter;\n    this.setState({\n      localCounter: ++localCounter\n    });\n  } // Mount Lifecycle events\n\n\n  UNSAFE_componentWillMount() {\n    console.log(\"componentWillMount\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  } // Update Lifecycle events\n\n\n  UNSAFE_componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n\n  UNSAFE_componentWillUpdate() {\n    console.log(\"componentWillUpdate\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  } //   static getDerivedStateFromProps(nextProps, prevState) {}\n\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Local Counter : \", this.state.localCounter), React.createElement(\"button\", {\n      onClick: this.updateLocalCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Update Local\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Counter : \", this.props.counter), React.createElement(\"button\", {\n      onClick: this.props.updateCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Update Parent\")));\n  }\n\n}\n\nexport default class UpdateClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      isLoaded: false\n    };\n    this.updateCounter = this.updateCounter.bind(this);\n  }\n\n  updateCounter() {\n    let counter = this.state.counter;\n    this.setState({\n      counter: ++counter\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    console.log(\"componentDidMount\");\n  }\n\n  render() {\n    var isLoaded = this.state.isLoaded.isLoaded;\n    console.log(\"isLoaded--->\", isLoaded);\n\n    if (isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Contents Loaded\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Content is loading...\");\n    } // return(\n    //   this.state.counter % 4 === 0 ? (<Clock updateCounter={this.updateCounter} counter={this.state.counter} />\n    //   ) : null\n    // )\n\n  }\n\n  fetchData() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts?userId=2\") // fetch('https://rayndomuser.me/api/?results=50&nat=us,dk,fr,gb')\n    // fetch('https://randomuser.me/fuytfhjtlikg')\n    .then(function (response) {\n      console.log(response.status);\n      this.setState({\n        isLoaded: true\n      });\n      return response.json();\n    }).then(parsedJSON => {// console.log(parsedJSON)\n    }).catch(error => console.log(\"parsing failed : here we can insert any error message\", error));\n  }\n\n}","map":{"version":3,"sources":["/home/chhavisharma/Desktop/React/firstapp/src/clock.js"],"names":["React","Component","Clock","constructor","props","state","localCounter","updateLocalCounter","bind","setState","UNSAFE_componentWillMount","console","log","componentDidMount","UNSAFE_componentWillReceiveProps","shouldComponentUpdate","UNSAFE_componentWillUpdate","componentDidUpdate","componentWillUnmount","render","counter","updateCounter","UpdateClock","isLoaded","fetchData","fetch","then","response","status","json","parsedJSON","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localCounter: 0\n    };\n    this.updateLocalCounter = this.updateLocalCounter.bind(this);\n  }\n  updateLocalCounter() {\n    let { localCounter } = this.state;\n    this.setState({\n      localCounter: ++localCounter\n    });\n  }\n  // Mount Lifecycle events\n  UNSAFE_componentWillMount() {\n    console.log(\"componentWillMount\");\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  }\n  // Update Lifecycle events\n  UNSAFE_componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n  UNSAFE_componentWillUpdate() {\n    console.log(\"componentWillUpdate\");\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n  //   static getDerivedStateFromProps(nextProps, prevState) {}\n  render() {\n    console.log(\"render\");\n    return (\n      <div>\n        <div>\n          <label>Local Counter : {this.state.localCounter}</label>\n          <button onClick={this.updateLocalCounter}>Update Local</button>\n        </div>\n        <div>\n          <label>Counter : {this.props.counter}</label>\n          <button onClick={this.props.updateCounter}>Update Parent</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class UpdateClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      isLoaded: false\n    };\n    this.updateCounter = this.updateCounter.bind(this);\n  }\n  updateCounter() {\n    let { counter } = this.state;\n    this.setState({\n      counter: ++counter\n    });\n  }\n  componentDidMount() {\n    this.fetchData();\n    console.log(\"componentDidMount\");\n  }\n  render() {\n    var { isLoaded } = this.state.isLoaded;\n    console.log(\"isLoaded--->\", isLoaded);\n    if (isLoaded) {\n      return (\n        <div>\n          Contents Loaded\n        </div>\n      );\n    } else {\n      return <div>Content is loading...</div>;\n    }\n\n    // return(\n    //   this.state.counter % 4 === 0 ? (<Clock updateCounter={this.updateCounter} counter={this.state.counter} />\n    //   ) : null\n\n    // )\n  }\n  fetchData() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts?userId=2\")\n      // fetch('https://rayndomuser.me/api/?results=50&nat=us,dk,fr,gb')\n      // fetch('https://randomuser.me/fuytfhjtlikg')\n      .then(function(response) {\n        console.log(response.status);\n        this.setState({\n          isLoaded: true\n        });\n        return response.json();\n      })\n      .then(parsedJSON => {\n        // console.log(parsedJSON)\n      })\n      .catch(error =>\n        console.log(\n          \"parsing failed : here we can insert any error message\",\n          error\n        )\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}