{"ast":null,"code":"var _jsxFileName = \"/home/chhavisharma/Desktop/React/firstapp/src/clock.js\";\nimport React, { Component } from \"react\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localCounter: 0\n    };\n    this.updateLocalCounter = this.updateLocalCounter.bind(this);\n  }\n\n  updateLocalCounter() {\n    let localCounter = this.state.localCounter;\n    this.setState({\n      localCounter: ++localCounter\n    });\n  } // Mount Lifecycle events\n\n\n  UNSAFE_componentWillMount() {\n    console.log(\"componentWillMount\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  } // Update Lifecycle events\n\n\n  UNSAFE_componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n\n  UNSAFE_componentWillUpdate() {\n    console.log(\"componentWillUpdate\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  } //   static getDerivedStateFromProps(nextProps, prevState) {}\n\n\n  render() {\n    console.log(\"render\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Local Counter : \", this.state.localCounter), React.createElement(\"button\", {\n      onClick: this.updateLocalCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Update Local\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Counter : \", this.props.counter), React.createElement(\"button\", {\n      onClick: this.props.updateCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Update Parent\")));\n  }\n\n}\n\nexport default class UpdateClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      isLoaded: false\n    };\n    this.updateCounter = this.updateCounter.bind(this);\n  }\n\n  updateCounter() {\n    let counter = this.state.counter;\n    this.setState({\n      counter: ++counter\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    console.log(\"componentDidMount\");\n  }\n\n  render() {\n    var isLoaded = this.state.isLoaded.isLoaded;\n\n    if (isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Contents Loaded\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"this.state.counter % 4 === 0 ? (\", React.createElement(Clock, {\n        updateCounter: this.updateCounter,\n        counter: this.state.counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \") : null;\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Content is  loading...\");\n    }\n  }\n\n  fetchData() {\n    fetch('https://randomuser.me/api/?results=50&nat=us,dk,fr,gb') // fetch('https://rayndomuser.me/api/?results=50&nat=us,dk,fr,gb')\n    // fetch('https://randomuser.me/fuytfhjtlikg')\n    .then(response => {\n      response.json(); // console.log(response.status)\n    }).then(parsedJSON => {\n      console.log(parsedJSON);\n      this.setState({\n        isLoaded: true,\n        items: parsedJSON\n      });\n    }).catch(error => console.log('parsing failed : here we can insert any error message', error));\n  }\n\n}","map":{"version":3,"sources":["/home/chhavisharma/Desktop/React/firstapp/src/clock.js"],"names":["React","Component","Clock","constructor","props","state","localCounter","updateLocalCounter","bind","setState","UNSAFE_componentWillMount","console","log","componentDidMount","UNSAFE_componentWillReceiveProps","shouldComponentUpdate","UNSAFE_componentWillUpdate","componentDidUpdate","componentWillUnmount","render","counter","updateCounter","UpdateClock","isLoaded","fetchData","fetch","then","response","json","parsedJSON","items","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localCounter: 0\n    };\n    this.updateLocalCounter = this.updateLocalCounter.bind(this);\n    \n  }\n  updateLocalCounter() {\n    let { localCounter } = this.state;\n    this.setState({\n      localCounter: ++localCounter\n    });\n  }\n  // Mount Lifecycle events\n  UNSAFE_componentWillMount() {\n    console.log(\"componentWillMount\");\n  }\n  componentDidMount() {\n    \n    console.log(\"componentDidMount\");\n  }\n  // Update Lifecycle events\n  UNSAFE_componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps\");\n  }\n  shouldComponentUpdate() {\n    console.log(\"shouldComponentUpdate\");\n    return true;\n  }\n  UNSAFE_componentWillUpdate() {\n    console.log(\"componentWillUpdate\");\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n  //   static getDerivedStateFromProps(nextProps, prevState) {}\n  render() {\n    console.log(\"render\");\n    return (\n      <div>\n        <div>\n          <label>Local Counter : {this.state.localCounter}</label>\n          <button onClick={this.updateLocalCounter}>Update Local</button>\n        </div>\n        <div>\n          <label>Counter : {this.props.counter}</label>\n          <button onClick={this.props.updateCounter}>Update Parent</button>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default class UpdateClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      isLoaded:false,\n    };\n    this.updateCounter = this.updateCounter.bind(this);\n  }\n  updateCounter() {\n    let { counter } = this.state;\n    this.setState({\n      counter: ++counter\n    });\n  }\n  componentDidMount() {\n    this.fetchData(); \n    console.log(\"componentDidMount\");\n  }\n  render() {\n\n  var {isLoaded}=this.state.isLoaded;\n\n  if(isLoaded){\n    return(\n    <div>Contents Loaded\n     <div>\n     this.state.counter % 4 === 0 ? (<Clock updateCounter={this.updateCounter} counter={this.state.counter} />\n      ) : null;\n      </div>  \n    </div>\n    )\n    }\n    else{\n    return(<div>Content is  loading...</div>)\n  }\n\n\n\n\n\n    \n   \n    \n  }\n  fetchData(){\n   \n    fetch('https://randomuser.me/api/?results=50&nat=us,dk,fr,gb')\n    // fetch('https://rayndomuser.me/api/?results=50&nat=us,dk,fr,gb')\n    // fetch('https://randomuser.me/fuytfhjtlikg')\n        .then(response => {\n          response.json()\n          // console.log(response.status)\n        })\n        .then(parsedJSON => {\n         console.log(parsedJSON)\n          this.setState({\n            isLoaded:true,\n            items:parsedJSON,\n          })})\n        .catch(error => console.log('parsing failed : here we can insert any error message', error))\n\n  \n  }\n\n  }"]},"metadata":{},"sourceType":"module"}